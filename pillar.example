# -*- coding: utf-8 -*-
# vim: ft=yaml ts=2 sts=2 sw=2 et

### Zoomdata provisioning configuration example
#
zoomdata:
  ## Package installation settings
  #
  # Repository base URL where Zoomdata packages are hosted.
  # This would be overridden if ``ZOOMDATA_REPOSITORY`` environment variable
  # has been set for ``salt-minion`` process or ``salt-call`` command (in
  # masterless mode).
  base_url: 'http://repo.zoomdata.com'
  # URL to the GnuPG public key for the repo/pkgs verification.
  # Put `none` or empty string to skip GnuPG check (for internal repos).
  gpgkey: 'https://repo.zoomdata.com/ZOOMDATA-GPG-KEY.pub'
  # Repository branch from which the packages would be installed.
  # This would be overridden by ``ZOOMDATA_RELEASE`` environment variable.
  release: '2.6'

  # Additional repositories under the ``base_url`` to get packages from
  repositories:
    - microservices
    - tools

  # Repository components to enable and install packages from
  components:
    - stable
    #- unstable
    # Lisensed repo became obsoleted
    #- licensed

  # Exact version of Zoomdata Server packages to install, use ``latest``
  # keyword to always upgrade to the latest minor version in the release.
  # This would be overridden by ``ZOOMDATA_VERSION`` environment variable.
  {%- if grains['os'] == 'Ubuntu' %}
  # Ubuntu-specific version template: EDIT NUMBERS BEFORE dash ('-') sign
  #version: "2.6.2-1+{{ grains['oscodename'] }}.stable"
  {%- else %}
  # Packages version for RHEL/CentOS systems
  #version: '2.6.2'
  {%- endif %}

  # Zoomdata Server packages to install
  packages:
    - zoomdata
    # The Consul package is mandatory since Zoomdata 2.4 release, comment out for 2.3
    - zoomdata-consul
    - zoomdata-query-engine
    - zoomdata-scheduler
    - zoomdata-stream-writer
    - zoomdata-upload-service
    # The Spark Proxy has gone in Zoomdata 2.6 release
    #- zoomdata-spark-proxy
    - zoomdata-xvfb
    - zoomdata-zdmanage

  # Zoomdata EDC section
  edc:
    # Exact version of Zoomdata Server packages to install, use ``latest``
    # keyword to always upgrade to the latest minor version in the release.
    # This would be overridden by ``ZOOMDATA_EDC_VERSION`` environment variable.
    {%- if grains['os'] == 'Ubuntu' %}
    # Ubuntu-specific version template: EDIT NUMBERS BEFORE dash ('-') sign
    #version: "2.6.2-1+{{ grains['oscodename'] }}.stable"
    {%- else %}
    # Packages version for RHEL/CentOS systems
    #version: '2.6.2'
    {%- endif %}

    # Zoomdata EDC packages to install
    packages:
      - zoomdata-edc-apache-solr
      - zoomdata-edc-aurora
      - zoomdata-edc-cloudera-search
      # The ElasticSearch 1.7 was deprecated in Zoomdata 2.6 release
      #- zoomdata-edc-elasticsearch-1.7
      - zoomdata-edc-elasticsearch-2.0
      - zoomdata-edc-elasticsearch-5.0
      - zoomdata-edc-impala
      - zoomdata-edc-memsql
      - zoomdata-edc-mongo
      - zoomdata-edc-mssql
      - zoomdata-edc-mysql
      - zoomdata-edc-oracle
      # The Phoenix 4.5 was deprecated in Zoomdata 2.6 release
      #- zoomdata-edc-phoenix-4.5
      - zoomdata-edc-phoenix-4.7-queryserver
      - zoomdata-edc-postgresql
      - zoomdata-edc-redshift
      - zoomdata-edc-rts
      - zoomdata-edc-sparksql
      - zoomdata-edc-tez

    # Install JDBC jar drivers which are not packaged with EDC connectors.
    # This is an example for MySQL connector (``zoomdata-edc-mysql``):
    #jdbc:
    #  drivers:
    #    mysql:
    #      - 'http://repo1.maven.org/maven2/org/mariadb/jdbc/mariadb-java-client/1.3.2/mariadb-java-client-1.3.2.jar'
    #
    # Do the similar for other connectors which require external drivers.
    # To actually make it work, set ``install`` to ``True``:
    #  install: True

  ## Configuration settings
  #
  # Global system limits for Zoomdata user
  # (per-service limits for systemd based OS):
  # https://www.zoomdata.com/docs/2.6/installation-prerequisites.html
  limits:
    nproc:
      soft: '4096'
      hard: '4096'
    nofile:
      soft: '1048576'
      hard: '1048576'

  # Configuration property files and their corresponding variables:
  # https://www.zoomdata.com/docs/2.6/zoomdata-configuration-property-files-and-their-corresponding-variables.html
  environment:
    # Zoomdata Server
    zoomdata:
      path: '/etc/zoomdata/zoomdata.env'
      variables:
        JAVA_OPTS: '-Xss256k -Xms2048m -Xmx8192m'
    # Zoomdata Scheduler
    zoomdata-scheduler:
      path: '/etc/zoomdata/scheduler.env'
      variables:
        SCHEDULER_JAVA_OPTS: '-Xms512m -Xmx1024m'
    # Zoomdata SparkIT has gone in release 2.6
    #zoomdata-spark-proxy:
    #  path: '/etc/zoomdata/spark-proxy.env'
    #  variables:
    #    SPARK_PROXY_JAVA_OPTS: '-Xss256k -Xms512m -Xmx2048m'

  config:
    # Zoomdata Server
    zoomdata:
      # Old path (legacy configuration file) will be removed if specified.
      # This usually required when upgrading from 2.2 and older releases.
      # Make sure you have set all necessary configuration to the
      # ``properties`` dictionary.
      #old_path: '/etc/zoomdata/zoomdata.conf'
      path: '/etc/zoomdata/zoomdata.properties'
      properties:
        # Metadata DB connection details
        # (REMEMBER TO CHANGE VALUES BELOW IN ``postgres`` SECTION ACCORDINGLY!)
        spring.datasource.url: 'jdbc:postgresql://localhost:5432/zoomdata'
        spring.datasource.username: 'zoomdata'
        spring.datasource.password: 'PleaseChangeMe'
        # Upload Service and API credentials
        upload.destination.params.jdbc_url: 'jdbc:postgresql://localhost:5432/zoomdata-upload'
        upload.destination.params.user_name: 'zoomdata'
        upload.destination.params.password: 'PleaseChangeMe'
        upload.destination.schema: public
        upload.batch-size: 1000
        # Screenshot Feature: we disable it by default. Look at these pages for
        # instructions how to set it up on your platform:
        # https://www.zoomdata.com/docs/2.6/screenshot-for-rpm.html
        # https://www.zoomdata.com/docs/2.6/setting-up-the-screenshot-feature-for-ubuntu.html
        screenshot.daemon.enabled: False
        screenshot.daemon.schedule.rate: '168h'  # 1 week
        screenshots.dashboards.enabled: False
        screenshots.datasource-charts.enabled: False
        # Configure HTTPS for Zoomdata (see ``tls`` item below):
        # https://www.zoomdata.com/docs/2.6/adding-ssl-certificate-to-the-zoomdata-server.html
        #server.ssl.key-store: '/etc/zoomdata/zoomdata.jks'
        #server.ssl.key-store-password: 'your_keystore_password'
        # Optional redirect to https scheme, this requires HAProxy (see below)
        #http.redirect.port: '443'
      # Merge properties with hard-coded defaults. This is useful to skip
      # common configuration values. Set ``False`` to disable such behavior.
      merge: True
      # Update the properties with ones given above. Do not remove locally
      # modified properties. This is ``False`` by default (always replace).
      update: False
      # When updating the properties (set ``update: True``), discard locally
      # modified properties with the same names (keys), literally update them
      # all. Set ``False`` if you would like to keep local modifications, but
      # add some options from above.
      discard: True
    # Zoomdata Scheduler
    zoomdata-scheduler:
      path: '/etc/zoomdata/scheduler.properties'
      properties:
        # Metadata DB connection details
        # (REMEMBER TO CHANGE VALUES BELOW IN `postgres` SECTION ACCORDINGLY!)
        spring.datasource.url: 'jdbc:postgresql://localhost:5432/zoomdata-scheduler'
        spring.datasource.username: 'zoomdata'
        spring.datasource.password: 'PleaseChangeMe'
      #merge: True
      #update: False
      #discard: True
    # Zoomdata Spark Proxy. See the following article for additional info:
    # https://www.zoomdata.com/docs/2.4/changing-the-default-configuration-for-an-embedded-spark-server.html
    #
    # It has been gone entirely in release 2.6.
    #zoomdata-spark-proxy:
    #  path: '/etc/zoomdata/spark-proxy.properties'
    #  properties:
    #    hadoop.distro: 'cdh5'
    #  merge: True
    #  update: False
    #  discard: True

  # Zoomdata TLS: paste certificates chain and private key for your domain here.
  # Pay attention to indent exactly with 4 spaces for all lines under
  # ``certificate`` and ``key`` items.
  #tls:
  #  name: 'www.example.com'
  #  certificate: |
  #      -----BEGIN CERTIFICATE-----
  #      MIIXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  #      -----END CERTIFICATE-----
  #  key: |
  #      -----BEGIN PRIVATE KEY-----
  #      MIIXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
  #      -----END PRIVATE KEY-----

  # Services to enable and start
  services:
    # The Consul service is mandatory since Zoomdata 2.4 release,
    # comment out for 2.3
    - zoomdata-consul  # always start it first

    # EDC connectors. Some services are commented out due to licensed drivers
    # not included into the distribution. Uncomment them after you have
    # installed proper driver library file (see above).
    - zoomdata-edc-apache-solr
    #- zoomdata-edc-aurora
    - zoomdata-edc-cloudera-search
    # The ElasticSearch 1.7 was deprecated in Zoomdata 2.6 release
    #- zoomdata-edc-elasticsearch-1.7
    - zoomdata-edc-elasticsearch-2.0
    - zoomdata-edc-elasticsearch-5.0
    - zoomdata-edc-impala
    #- zoomdata-edc-memsql
    - zoomdata-edc-mongo
    #- zoomdata-edc-mssql
    #- zoomdata-edc-mysql
    #- zoomdata-edc-oracle
    # The Phoenix 4.5 was deprecated in Zoomdata 2.6 release
    #- zoomdata-edc-phoenix-4.5
    - zoomdata-edc-phoenix-4.7-queryserver
    - zoomdata-edc-postgresql
    #- zoomdata-edc-redshift
    - zoomdata-edc-rts
    - zoomdata-edc-sparksql
    - zoomdata-edc-tez

    # Microservices
    - zoomdata-stream-writer
    - zoomdata-upload-service

    # Zoomdata core
    - zoomdata-query-engine
    - zoomdata-scheduler

    # The Spark Proxy has gone in Zoomdata 2.6 release
    #- zoomdata-spark-proxy

    # Usually you don't need to keep screenshotting service always running
    #- zoomdata-xvfb

    # Zoomdata Server starts last
    - zoomdata


### PostgreSQL configuration
#
# Comment out the whole section to disable PostgreSQL installation and
# configuration.
postgres:
  # Create Zoomdata user for the first time.
  # Remove Jinja templating (``if .. endif``) lines when you want to ensure
  # that it would always have Pillar-defined password to be set.
  users:
    zoomdata:
      ensure: present
      {%- if (salt['postgres.user_exists']|default(none) is callable and
              not salt['postgres.user_exists']('zoomdata'))
          or salt['postgres.user_exists']|default(none) is not callable %}
      password: 'PleaseChangeMe'
      {%- endif %}

  # Create Zoomtata service databases
  databases:
    zoomdata:
      owner: 'zoomdata'
    zoomdata-scheduler:
      owner: 'zoomdata'
    zoomdata-upload:
      owner: 'zoomdata'

  {%- if grains['init'] == 'unknown' %}

  # If Salt is unable to detect init system running in the scope of state run,
  # probably we are trying to bake a container/VM image with PostgreSQL.
  bake_image: True

  {%- endif %}

  {%- if salt['status.time']|default(none) is callable %}

  # Backup extension for configuration files, defaults to ``.bak``.
  # Set ``False`` to stop creation of backups when config files change.
  config_backup: ".backup@{{ salt['status.time']('%y-%m-%d_%H:%M:%S') }}"

  {%- endif %}

  # Append the lines under this item to your postgresql.conf file.
  # Pay attention to indent exactly with 4 spaces for all lines.
  #postgresconf: |
  #  listen_addresses = '*'  # listen on all interfaces

  # This section covers ACL management in the `pg_hba.conf` file.
  # acls list controls: which hosts are allowed to connect, how clients
  # are authenticated, which PostgreSQL user names they can use, which
  # databases they can access.
  #
  # If ``acls`` item value is empty ('', [], null), then the contents of
  # ``pg_hba.conf`` file will not be touched at all.
  #acls:
  #  # "local" is for Unix domain socket connections only
  #  - ['local', 'all', 'all', 'peer']
  #  # IPv4 local connections:
  #  - ['host', 'all', 'all', '127.0.0.1/32', 'md5']
  #  # IPv6 local connections:
  #  - ['host', 'all', 'all', '::1/128', 'md5']


### HAproxy configuration
#
# Uncomment to enable forwarding from privileged ports to Zoomdata's binded
# ports: 80 --> 8080, 443 --> 8443
#haproxy:
#  global:
#    chroot:
#      enable: True
#      path: /var/lib/haproxy
#
#    maxconn: 4000
#    user: haproxy
#    group: haproxy
#
#    daemon: True
#
#    stats:
#      enable: True
#      socketpath: /var/lib/haproxy/stats
#
#  defaults:
#    mode: http
#    log: global
#    retries: 3
#    options:
#      - httplog
#      - dontlognull
#      - http-server-close
#      - forwardfor
#    timeouts:
#      - client  1m
#      - connect 10s
#      - server  1m
#      - tunnel  1h  # timeout to use with WebSocket and CONNECT
#
#  frontends:
#    zd-http:
#      bind: "*:80"
#      reqadds:
#        - "X-Forwarded-Proto:\\ http"
#      default_backend: zd-http-backend
#    zd-https:
#      bind: "*:443"
#      mode: tcp
#      default_backend: zd-https-backend
#
#  backends:
#    zd-http-backend:
#      servers:
#        zd-http:
#          host: 127.0.0.1
#          port: 8080
#          check: check
#    zd-https-backend:
#      mode: tcp
#      servers:
#        zd-https:
#          host: 127.0.0.1
#          port: 8443
#          check: check
