# -*- coding: utf-8 -*-
# vim: ft=yaml ts=2 sts=2 sw=2 et

### Zoomdata provisioning configuration example
#
zoomdata:
  ## Package installation settings
  #
  # Repository base URL where Zoomdata packages are hosted
  # This would be overriden if ZOOMDATA_REPOSITORY environment varible
  base_url: 'http://repo.zoomdata.com'
  # URL to the GnuPG public key for the repo/pkgs verification.
  # Put `none` or empty string to skip GnuPG check (for internal repos)
  gpgkey: 'https://repo.zoomdata.com/ZOOMDATA-GPG-KEY.pub'
  # Repository branch from which the packages would be installed
  # This would be overriden if ZOOMDATA_RELEASE environment varible
  release: '2.3'

  # Repository components to enable and install packages from
  components:
    - stable
    #- licensed
    #- unstable

  # Exact version of Zoomdata Server packages to install, use 'latest' keyword
  # to always upgrade to the latest minor version in the release
  # This would be overriden if ZOOMDATA_VERSION environment varible
  {%- if grains['os'] == 'Ubuntu' %}
  # Ubuntu-specific version template: EDIT NUMBERS BEFORE dash ('-') sign
  #version: "2.3.12-1+{{ grains['oscodename'] }}.stable"
  {%- else %}
  # Packages version for RHEL systems
  #version: '2.3.12'
  {%- endif %}

  # Zoomdata Server packages to install
  packages:
    - zoomdata
    # Uncomment the Consul package for Zoomdata 2.4 release
    #- zoomdata-consul
    - zoomdata-scheduler
    - zoomdata-spark-proxy

  # Zoomdata EDC section
  edc:
    # Exact version of Zoomdata Server packages to install, use 'latest' keyword
    # to always upgrade to the latest minor version in the release.
    # This would be overriden if ZOOMDATA_EDC_VERSION environment varible
    {%- if grains['os'] == 'Ubuntu' %}
    # Ubuntu-specific version template: EDIT NUMBERS BEFORE dash ('-') sign
    #version: "2.3.6-1+{{ grains['oscodename'] }}.stable"
    {%- else %}
    # Packages version for RHEL systems
    #version: '2.3.6'
    {%- endif %}
    # Zoomdata EDC packages to install
    packages:
      - zoomdata-edc-elasticsearch-1.7
      - zoomdata-edc-rts

  ## Configuration settings
  #
  # Global system limits for Zoomdata user (per-service limits for systemd OS):
  # http://docs.zoomdata.com/installation-prerequisites
  limits:
    nproc:
      soft: '4096'
      hard: '4096'
    nofile:
      soft: '1048576'
      hard: '1048576'

  # Configuration property files and their corresponding variables:
  # http://docs.zoomdata.com/zoomdata-configuration-property-files-and-their-corresponding-variables
  environment:
    # Zoomdata Server
    zoomdata:
      path: '/etc/zoomdata/zoomdata.env'
      variables:
        JAVA_OPTS: '-Xss256k -Xms2048m -Xmx8192m'
    # Zoomdata Scheduler
    zoomdata-scheduler:
      path: '/etc/zoomdata/scheduler.env'
      variables:
        SCHEDULER_JAVA_OPTS: '-Xms512m -Xmx1024m'
    # Zoomdata SparkIT
    zoomdata-spark-proxy:
      path: '/etc/zoomdata/spark-proxy.env'
      variables:
        SPARK_PROXY_JAVA_OPTS: '-Xss256k -Xms512m -Xmx2048m'

  config:
    # Zoomdata Server
    zoomdata:
      path: '/etc/zoomdata/zoomdata.properties'
      properties:
        # Metadata DB connection details
        # (REMEMBER TO CHANGE VALUES BELOW IN `postgres` SECTION ACCORDINGLY!)
        spring.datasource.url: 'jdbc:postgresql://localhost:5432/zoomdata'
        spring.datasource.username: 'zoomdata'
        spring.datasource.password: 'PleaseChangeMe'
        # Screenshot Feature: we disable it by default. Look at these pages for
        # instructions how to set it up on your platform:
        # http://docs.zoomdata.com/screenshot-for-rpm
        # http://docs.zoomdata.com/setting-up-screenshot-for-ubuntu
        screenshot.daemon.enabled: False
        screenshot.daemon.schedule.rate: '168h'  # 1 week
        screenshots.dashboards.enabled: False
        screenshots.datasource-charts.enabled: False
    # Zoomdata Scheduler
    zoomdata-scheduler:
      path: '/etc/zoomdata/scheduler.properties'
      properties:
        # Metadata DB connection details
        # (REMEMBER TO CHANGE VALUES BELOW IN `postgres` SECTION ACCORDINGLY!)
        spring.datasource.url: 'jdbc:postgresql://localhost:5432/zoomdata-scheduler'
        spring.datasource.username: 'zoomdata'
        spring.datasource.password: 'PleaseChangeMe'
    # Zoomdata Spark Proxy. See the following article for additional info:
    # http://docs.zoomdata.com/changing-the-default-configuration-for-an-embedded-spark-server
    #zoomdata-spark-proxy:
    #  path: '/etc/zoomdata/spark-proxy.properties'
    #  properties:
    #    hadoop.distro: 'cdh5'

  # Services to enable and start
  services:
    # Uncomment the Consul agent service for Zoomdata 2.4 release
    #- zoomdata-consul
    - zoomdata-edc-elasticsearch-1.7
    - zoomdata-edc-rts
    - zoomdata-scheduler
    - zoomdata-spark-proxy
    - zoomdata


### PostgreSQL configuration
#
# Comment out the whole section to disable
# PostgreSQL installation and configuration
postgres:
  # Create Zoomdata user
  users:
    zoomdata:
      password: 'PleaseChangeMe'

  # Create Zoomtata service databases
  databases:
    zoomdata:
      owner: 'zoomdata'
    zoomdata-scheduler:
      owner: 'zoomdata'

  # Append the lines under this item to your postgresql.conf file.
  # Pay attention to indent exactly with 4 spaces for all lines.
  #postgresconf: |
  # listen_addresses = '*'  # listen on all interfaces

  # Backup extension for postgresql.conf file, defaults to `.bak`.
  # Set to False to stop creation of backup on postgresql.conf changes.
  #postgresconf_backup: ".backup@{{ salt['status.time']('%y-%m-%d_%H:%M:%S') }}"

  # This section covers ACL management in the `pg_hba.conf` file.
  # acls list controls: which hosts are allowed to connect, how clients
  # are authenticated, which PostgreSQL user names they can use, which
  # databases they can access.
  #acls:
  #  # "local" is for Unix domain socket connections only
  #  - ['local', 'all', 'all', 'peer']
  #  # IPv4 local connections:
  #  - ['host', 'all', 'all', '127.0.0.1/32', 'md5']
  #  # IPv6 local connections:
  #  - ['host', 'all', 'all', '::1/128', 'md5']


### HAproxy configuration
#
# Uncomment to enable forwarding from privileged ports to Zoomdata's binded
# ports: 80 --> 8080, 443 --> 8443
#haproxy:
#  global:
#    chroot:
#      enable: True
#      path: /var/lib/haproxy
#
#    maxconn: 4000
#    user: haproxy
#    group: haproxy
#
#    daemon: True
#
#    stats:
#      enable: True
#      socketpath: /var/lib/haproxy/stats
#
#  defaults:
#    mode: http
#    log: global
#    retries: 3
#    options:
#      - httplog
#      - dontlognull
#      - http-server-close
#      - forwardfor
#
#  frontends:
#    zd-http:
#      bind: "*:80"
#      reqadds:
#        - "X-Forwarded-Proto:\\ http"
#      default_backend: zd-http-backend
#    zd-https:
#      bind: "*:443"
#      mode: tcp
#      default_backend: zd-https-backend
#
#  backends:
#    zd-http-backend:
#      servers:
#        zd-http:
#          host: 127.0.0.1
#          port: 8080
#          check: check
#    zd-https-backend:
#      mode: tcp
#      servers:
#        zd-https:
#          host: 127.0.0.1
#          port: 8443
#          check: check
