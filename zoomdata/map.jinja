{% import_yaml 'zoomdata/osfamily_map.yaml' as osfamily_map %}

{# Merge Pillar items with defaults #}
{% set zoomdata = salt['grains.filter_by'](
    osfamily_map,
    grain='os_family',
    merge=salt['pillar.get']('zoomdata', {}),
    base='default',
) %}

{# Import modules bundled with the formula #}
{% if salt['zoomdata.inspect']|default(none) is not callable %}
    {% do salt['saltutil.sync_modules']() %}
{% endif %}

{# Read envrionment variables #}
{% do zoomdata.update({
    'base_url': salt['environ.get']('ZOOMDATA_REPOSITORY', zoomdata.base_url),
    'release':  salt['environ.get']('ZOOMDATA_RELEASE', zoomdata.release),
    'version':  salt['environ.get']('ZOOMDATA_VERSION', zoomdata.get('version')),
    'edc':      zoomdata.edc|default({}, true),
}) %}

{% do zoomdata.edc.update(
    {'version': salt['environ.get']('ZOOMDATA_EDC_VERSION', zoomdata.edc.get('version'))},
) %}

{# Process properties #}
{% for service, config in zoomdata.config|default({}, true)|dictsort() %}
    {% if config.properties|default({}, true) and not config.merge|default(true) %}
        {# Drop default properties if we don't want to merge them #}
        {% set properties = salt['pillar.get']('zoomdata:config:' ~ service ~ ':properties', none) %}
        {% do zoomdata.config[service].update({'properties': properties}) %}
    {% endif %}

    {% if config['update']|default(false) %}
        {% set local_config = salt['zoomdata.inspect']().zoomdata.config[service]|default({}, true) %}
        {% set local_properties = local_config['properties']|default({}, true) %}
        {% set properties = zoomdata.config[service].properties|default({}, true) %}
        {% if config['discard']|default(true) %}
            {# Read local properties and update them with provided values #}
            {% do local_properties.update(properties) %}
            {% do zoomdata.config[service].update({'properties': local_properties}) %}
        {% else %}
            {# Filter out default or Pillar provided properties and only add new ones #}
            {% do properties.update(local_properties) %}
            {% do zoomdata.config[service].update({'properties': properties}) %}
        {% endif %}
    {% endif %}
{% endfor %}

{# Detect if we are using real init or building some image #}
{% set init_available = grains['init'] != 'unknown' %}
